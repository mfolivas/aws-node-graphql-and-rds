'use strict'

const mysql = require('../index')({
  backoffx: (wait,retries) => {
    console.log('CUSTOM BACKOFF',wait,retries);
    return 20
  },
  //backoff: 'full',
  onRetry: (e,retries,sleep,type) => { console.log('RETRY:',retries,sleep,type);}
})

// console.log(mysql);

mysql.config({
  host     : 'localhost',
  database : 'test-mysql',
  user     : 'test2',
  password : 'test',
  port     : '8889'
})

console.log('MYSQL TESTING:');

const handler = async () => {

  let start = Date.now()

  try {

    //await mysql.connect()

    let transaction = await mysql.transaction()
      .query('SELECT COUNT(*) as theCount FROM test')
      .query('INSERT INTO test (name) VALUES(?)','NEW NAME')
      .query('SELECT * FROM test')
      .query((r,results) => {
          console.log('\n\n------------ QUERY RESULT:',r,'\n--------------\n\n');
          console.log('\n\n------------ QUERY RESULTS:',results,'\n--------------\n\n');
          // throw 'error'
          return ['INSERT INTO test (name) VALUES(?)',[r.insertId]]
      })
      .query('SELECT COUNT(*) as theCount FROM test')
      // .query('SELECT COUNT(*) as theCount FROM test2')
      .rollback((e) => { console.log('custom rollback', e.code); })
      .commit()

    console.log('\n\n-------------------------TRANSACTION RESPONSE:',transaction);

    // let totalConns = await mysql.getTotalConnections()
    // console.log('Total Connections:',totalConns);
    //


    // let processList = await mysql.query('SHOW PROCESSLIST')
    // let processList = await mysql.query('SELECT * FROM information_schema.processlist ORDER BY id')
    // console.log(processList);



    // // processList.results.forEach(row => {
    // //   //mysql.query('CALL mysql.rds_kill(?)',[row.id])
    // //   mysql.query('KILL ?',[row.ID])
    // // })
    // await mysql.quit()
    //
    // console.log('\n\n----- THIS IS POST QUIT ------\n\n');
    //
    // await mysql.connect()

    // let sleep = await mysql.query({ sql: 'SELECT SLEEP(5);', timeout: 1000 });
    // console.log('DONE SLEEP');

    // let results1 = await mysql.query('SELECT * FROM test LIMIT 1,2')
    // console.log(results1);

  } catch (e) {
    console.log('TIME TO ERROR:', Date.now()-start, 'ms');
    console.log('ERROR CAUGHT:',e);
  }


  // let processList = await mysql.query('SHOW PROCESSLIST')
  // // let processList = await mysql.query('SELECT * FROM information_schema.processlist ORDER BY id')
  // console.log(processList);

  // let end = Date.now()
  console.log('TOTAL TIME:', Date.now()-start, 'ms');

  await mysql.end()
  await mysql.quit()
}

handler()
