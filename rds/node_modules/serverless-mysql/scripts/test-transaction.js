'use strict'

const delay = ms => new Promise(res => setTimeout(res, ms))

const mysql = require('../index')({
  config: {
    host     : 'localhost',
    database : 'test-mysql',
    user     : 'test',
    password : 'test',
    port     : '8889'
  },
  onConnect: (client) => { console.log('MYSQL Connected:', client.threadId) },
  onClose: () => { console.log('MYSQL Connection Closed') },
  onError: (e) => { console.log('MYSQL Connection Error:',e.message) },
  onRetry: (e,retries,sleep) => { console.log('RETRY',retries,sleep) },
  onKill: (zombie) => { console.log('Kill:',zombie) },
  onKillError: (e) => { console.log('Kill Error:',e.message) }
})


console.log('MYSQL TESTING:');

const handler = async () => {

  try {

    let response = await mysql.transaction()
      .query("SELECT * FROM test")
      .rollback(e => {
        console.log('ROLLBACK',e)
      })
      .commit()

    console.log(response)

  } catch (e) {
    console.log('ERROR CAUGHT:',e.message);
  }

  await mysql.end()
  await mysql.quit()
}

handler()
